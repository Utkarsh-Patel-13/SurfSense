version: '3.8'

services:
  # PostgreSQL Database with pgvector extension
  db:
    image: pgvector/pgvector:pg15
    container_name: surfsense_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-surfsense}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-surfsense}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - surfsense-network

  # Backend API Service
  backend:
    build:
      context: ./surfsense_backend
      dockerfile: Dockerfile
    container_name: surfsense_backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-surfsense}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-this}
      NEXT_FRONTEND_URL: http://frontend:3000
      AUTH_TYPE: ${AUTH_TYPE:-LOCAL}
      GOOGLE_OAUTH_CLIENT_ID: ${GOOGLE_OAUTH_CLIENT_ID:-}
      GOOGLE_OAUTH_CLIENT_SECRET: ${GOOGLE_OAUTH_CLIENT_SECRET:-}
      EMBEDDING_MODEL: ${EMBEDDING_MODEL:-mixedbread-ai/mxbai-embed-large-v1}
      RERANKERS_MODEL_NAME: ${RERANKERS_MODEL_NAME:-ms-marco-MiniLM-L-12-v2}
      RERANKERS_MODEL_TYPE: ${RERANKERS_MODEL_TYPE:-flashrank}
      TTS_SERVICE: ${TTS_SERVICE:-openai/tts-1}
      TTS_SERVICE_API_KEY: ${TTS_SERVICE_API_KEY:-}
      TTS_SERVICE_API_BASE: ${TTS_SERVICE_API_BASE:-}
      STT_SERVICE: ${STT_SERVICE:-openai/whisper-1}
      STT_SERVICE_API_KEY: ${STT_SERVICE_API_KEY:-}
      STT_SERVICE_API_BASE: ${STT_SERVICE_API_BASE:-}
      FIRECRAWL_API_KEY: ${FIRECRAWL_API_KEY:-}
      ETL_SERVICE: ${ETL_SERVICE:-DOCLING}
      UNSTRUCTURED_API_KEY: ${UNSTRUCTURED_API_KEY:-}
      LLAMA_CLOUD_API_KEY: ${LLAMA_CLOUD_API_KEY:-}
      LANGSMITH_TRACING: ${LANGSMITH_TRACING:-false}
      LANGSMITH_ENDPOINT: ${LANGSMITH_ENDPOINT:-}
      LANGSMITH_API_KEY: ${LANGSMITH_API_KEY:-}
      LANGSMITH_PROJECT: ${LANGSMITH_PROJECT:-surfsense}
      UVICORN_HOST: 0.0.0.0
      UVICORN_PORT: 8000
      UVICORN_LOG_LEVEL: ${UVICORN_LOG_LEVEL:-info}
    volumes:
      - ./surfsense_backend:/app
      - backend_uploads:/app/uploads
      - backend_podcasts:/app/podcasts
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/verify-token"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - surfsense-network

  # Frontend Web Application
  frontend:
    build:
      context: ./surfsense_web
      dockerfile: Dockerfile
    container_name: surfsense_frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_FASTAPI_BACKEND_URL: http://localhost:${BACKEND_PORT:-8000}
      NEXT_PUBLIC_FASTAPI_BACKEND_AUTH_TYPE: ${AUTH_TYPE:-LOCAL}
      NEXT_PUBLIC_ETL_SERVICE: ${ETL_SERVICE:-DOCLING}
    volumes:
      - ./surfsense_web:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - surfsense-network

  # pgAdmin for Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: surfsense_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@surfsense.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-surfsense}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./scripts/pgadmin-servers.json:/pgadmin4/servers.json:ro
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      - db
    networks:
      - surfsense-network

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  backend_uploads:
    driver: local
  backend_podcasts:
    driver: local

networks:
  surfsense-network:
    driver: bridge